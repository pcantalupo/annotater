#!/bin/bash
#PBS -m e
#PBS -M pcantalupo@gmail.com
#PBS -j oe
#PBS -q shared
#PBS -l walltime=6:00:00
#PBS -l nodes=1:ppn=8

# qsub -v FASTA=XXXX -N NAME

module purge
module load genomics

set -u
: $FASTA
set +u

# VARIABLES
ANNOTCONF=annot.conf

# Guarantee that we start in the PBS work directory
cd ${PBS_O_WORKDIR}

# STAGE IN
echo -e "\nJob starting: `date`"
echo "StageIn moving to ${SCRATCH} directory. Files will be copied and deleted during appropriate stages in the pipeline"
cd ${SCRATCH}
echo -e "\nPipeline starting: `date`" && s=`date +%s`

# A little function to report success or failure of job step
function status_report () {
    if [[ $1 != 0 ]] ; then
	echo "ERROR: Step $2 failed with error code $1"
	exit
    fi
}

# function to report the date for each job step
function date_report () {
    echo -e "\nStep $1 $2 starting: `date`"
}

# Step - Annotator
STEP_NUM=0
echo "-exec blastn -db human_genomic -qc 50 -pid 80 -lcase_masking -max_target_seqs 2
-exec blastn -db nt -qc 50 -pid 80
-exec blastx -db nr
-exec tblastx -db viral.1.1.genomic" > ${ANNOTCONF}
date_report ${STEP_NUM} "Annotating sequences"
cp -v ${PBS_O_WORKDIR}/${FASTA} ${SCRATCH}
TEMP_IN=${FASTA}
TEMP_OUT=
OUTDIR=${FASTA}.annotator
Reann.pl -file ${TEMP_IN} -config ${ANNOTCONF} -folder ${OUTDIR} -num_threads 8 -evalue 1e-5 -tax
status_report ${?} ${STEP_NUM}
mv -v ${ANNOTCONF} ${OUTDIR}    # mv config file into annotator output folder
touch ${OUTDIR}/OK
rm -f ${TEMP_IN}

# STAGE OUT function
# -- We want to use a copy rather than a move to guard against
#    any failure during the STAGE OUT process.  It's fine to do
#    an explicit copy and delete rather than a move as it is 
#    slightly more fault-tolerant.
echo -e "\nStageOut starting"
echo -e "\nPipeline end: `date`" && e=`date +%s`
echo Pipelinetime:$((e-s))
cp -vr ${OUTDIR} ${PBS_O_WORKDIR}
echo "Job done: `date`"
echo "Cleaning up ${SCRATCH} directory"
cd ${PBS_O_WORKDIR}
rm -rf ${SCRATCH}
